//------------------------------------------------------------------------------
// <auto-generated>
//     此代码已从模板生成。
//
//     手动更改此文件可能导致应用程序出现意外的行为。
//     如果重新生成代码，将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Fr.Service
{ 
    using Fr.IService;
    using Fr.IRepositories;
    using Fr.Repositories;
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using Fr.Model;
    
    public partial class SysUserService:ISysUserService
    {
        ISysUserRepository _repository;

        /// <summary>
        /// 构造函数注入
        /// </summary>
        /// <param name="repository"></param>
        public SysUserService(ISysUserRepository repository)
        {
            _repository = repository;
        }
        
        public bool Add(SysUser user)
        {
            if (string.IsNullOrEmpty(user.UserId))
            {
                user.UserId = Guid.NewGuid().ToString("N");
                user.CreateTime = DateTime.Now;
                user.CreateUserId = user.UserId;
                user.ModifyTime= DateTime.Now;
                user.ModifyUserId = user.UserId;
                return _repository.Insert(user);
            }
            else
            {
                var entity = _repository.Source.Where(c => c.UserId == user.UserId).FirstOrDefault();
                if (entity == null)
                {
                    user.CreateTime = DateTime.Now;
                    user.CreateUserId = user.UserId;
                    user.ModifyTime = DateTime.Now;
                    user.ModifyUserId = user.UserId;
                    return _repository.Insert(user);
                }
                else
                {
                    entity.NickName = user.NickName;
                    entity.LoginName = user.LoginName;
                    entity.Email = user.Email;
                    entity.Phone = user.Phone;
                    entity.Tel = user.Tel;
                    entity.ModifyTime = DateTime.Now;
                    entity.ModifyUserId = user.UserId;
                }
                return _repository.Save(user);
            } 
        }

        public SysUser Get(string userId)
        {
           return _repository.Source.Where(c => c.UserId == userId).FirstOrDefault();
        }

        public List<SysUser> GetUserList(int index, int size, out int total)
        {
            var source = _repository.Source.Where(c=>c.Status !=UserStateEnum.删除).OrderBy(c => c.LoginName);
            return _repository.FindForPaging(size, index, source, out total).ToList();
        }

        public SysUser Login(string loginName, string password)
        {
            var user = _repository.Source.FirstOrDefault(c => c.LoginName == loginName && c.Password == password);
            return user;
        }
    }
	
}
